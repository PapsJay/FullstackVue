{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nimport _imports_0 from './assets/logo.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  id: \"app\"\n};\nconst _hoisted_3 = {\n  class: \"col-12\"\n};\nconst _hoisted_4 = {\n  class: \"cardBox\"\n};\nconst _hoisted_5 = {\n  class: \"taskList\"\n};\nconst _hoisted_6 = [\"checked\", \"onInput\"];\nconst _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskInput = _resolveComponent(\"TaskInput\");\n  const _component_Counter = _resolveComponent(\"Counter\");\n  const _component_CurrentTime = _resolveComponent(\"CurrentTime\");\n  const _component_task_input = _resolveComponent(\"task-input\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_TaskInput, {\n    onAddTask: $options.addNewTask,\n    onMentionName: $options.sayMyName\n  }, null, 8 /* PROPS */, [\"onAddTask\", \"onMentionName\"]), _createVNode(_component_Counter, {\n    onCounterEvent: $options.incrCounter\n  }, null, 8 /* PROPS */, [\"onCounterEvent\"]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_CurrentTime, {\n    class: \"col-4\"\n  }), _createVNode(_component_task_input, {\n    class: \"col-6\",\n    onAddTask: $options.addNewTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.taskList, (taskItem, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: `${index}_${Math.random()}`\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: !!taskItem.finishedAt,\n      onInput: $event => _ctx.changeStatus(index)\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6), _createTextVNode(\" \" + _toDisplayString(taskItem.task) + \" \", 1 /* TEXT */), taskItem.finishedAt ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(taskItem.finishedAt), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","alt","src","id","class","_hoisted_1","_createVNode","_component_TaskInput","onAddTask","$options","addNewTask","onMentionName","sayMyName","_component_Counter","onCounterEvent","incrCounter","_hoisted_2","_component_CurrentTime","_component_task_input","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","$data","taskList","taskItem","index","key","Math","random","type","checked","finishedAt","onInput","$event","_ctx","changeStatus","_toDisplayString","task","_hoisted_7"],"sources":["/home/aruns/Desktop/VuePro/CookBook/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\" />\n  <TaskInput @add-task=\"addNewTask\" @mention-name=\"sayMyName\" />\n  <Counter @counter-event=\"incrCounter\" />\n  <div id=\"app\">\n    <CurrentTime class=\"col-4\" />\n    <task-input class=\"col-6\" @add-task=\"addNewTask\" />\n    <div class=\"col-12\">\n      <div class=\"cardBox\">\n        <ul class=\"taskList\">\n          <li\n            v-for=\"(taskItem, index) in taskList\"\n            :key=\"`${index}_${Math.random()}`\"\n          >\n            <input\n              type=\"checkbox\"\n              :checked=\"!!taskItem.finishedAt\"\n              @input=\"changeStatus(index)\"\n            />\n            {{ taskItem.task }}\n            <span v-if=\"taskItem.finishedAt\"> {{ taskItem.finishedAt }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TaskInput from \"./components/TaskInput.vue\";\nimport Counter from \"./components/Counter.vue\";\nimport CurrentTime from \"./components/CurrentTime.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    TaskInput,\n    Counter,\n    CurrentTime,\n  },\n\n  data() {\n    return {\n      counter: 0,\n      taskList: [],\n    };\n  },\n\n  methods: {\n    addNewTask(task) {\n      this.taskList.push({\n        task,\n        createdAt: Date.now(),\n        finishedAt: undefined,\n      });\n    },\n\n    sayMyName(name) {\n      alert(`Hello, Welcome ${name}`);\n    },\n\n    incrCounter() {\n      this.counter++;\n      alert(`Counter: ${this.counter}`);\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";OACsBA,UAAuB;gCAA3CC,mBAAA,CAA8C;EAAzCC,GAAG,EAAC,UAAU;EAACC,GAAuB,EAAvBH;;;EAGfI,EAAE,EAAC;AAAK;;EAGNC,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAS;;EACdA,KAAK,EAAC;AAAU;;;;;;;;;;6DAR1BC,UAA8C,EAC9CC,YAAA,CAA8DC,oBAAA;IAAlDC,SAAQ,EAAEC,QAAA,CAAAC,UAAU;IAAGC,aAAY,EAAEF,QAAA,CAAAG;2DACjDN,YAAA,CAAwCO,kBAAA;IAA9BC,cAAa,EAAEL,QAAA,CAAAM;EAAW,6CACpCf,mBAAA,CAqBM,OArBNgB,UAqBM,GApBJV,YAAA,CAA6BW,sBAAA;IAAhBb,KAAK,EAAC;EAAO,IAC1BE,YAAA,CAAmDY,qBAAA;IAAvCd,KAAK,EAAC,OAAO;IAAEI,SAAQ,EAAEC,QAAA,CAAAC;0CACrCV,mBAAA,CAiBM,OAjBNmB,UAiBM,GAhBJnB,mBAAA,CAeM,OAfNoB,UAeM,GAdJpB,mBAAA,CAaK,MAbLqB,UAaK,I,kBAZHC,mBAAA,CAWKC,SAAA,QAAAC,WAAA,CAVyBC,KAAA,CAAAC,QAAQ,GAA5BC,QAAQ,EAAEC,KAAK;yBADzBN,mBAAA,CAWK;MATFO,GAAG,KAAKD,KAAK,IAAIE,IAAI,CAACC,MAAM;QAE7B/B,mBAAA,CAIE;MAHAgC,IAAI,EAAC,UAAU;MACdC,OAAO,IAAIN,QAAQ,CAACO,UAAU;MAC9BC,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,YAAY,CAACV,KAAK;2EAC1B,GACF,GAAAW,gBAAA,CAAGZ,QAAQ,CAACa,IAAI,IAAG,GACnB,iBAAYb,QAAQ,CAACO,UAAU,I,cAA/BZ,mBAAA,CAAkE,QAAAmB,UAAA,EAAAF,gBAAA,CAA7BZ,QAAQ,CAACO,UAAU,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}