{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from './assets/logo.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  id: \"app\"\n};\nconst _hoisted_3 = {\n  class: \"col-12\"\n};\nconst _hoisted_4 = {\n  class: \"cardBox\"\n};\nconst _hoisted_5 = {\n  class: \"taskList\"\n};\nconst _hoisted_6 = [\"checked\", \"onInput\"];\nconst _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CurrentTime = _resolveComponent(\"CurrentTime\");\n  const _component_task_input = _resolveComponent(\"task-input\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <TaskInput @add-task=\\\"addNewTask\\\" @mention-name=\\\"sayMyName\\\" /> \"), _createCommentVNode(\" <Counter @counter-event=\\\"incrCounter\\\" /> \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_CurrentTime, {\n    class: \"col-4\"\n  }), _createVNode(_component_task_input, {\n    class: \"col-6\",\n    onAddTask: $options.addNewTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayList, (taskItem, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: `${index}_${Math.random()}`\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: !!taskItem.finishedAt,\n      onInput: $event => $options.changeStatus(index)\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6), _createTextVNode(\" \" + _toDisplayString(taskItem.task) + \" \", 1 /* TEXT */), taskItem.finishedAt ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Done at: \" + _toDisplayString(taskItem.finishedAt), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","alt","src","id","class","_hoisted_1","_createCommentVNode","_hoisted_2","_createVNode","_component_CurrentTime","_component_task_input","onAddTask","$options","addNewTask","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","displayList","taskItem","index","key","Math","random","type","checked","finishedAt","onInput","$event","changeStatus","_toDisplayString","task","_hoisted_7"],"sources":["/home/aruns/Desktop/VuePro/CookBook/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\" />\n  <!-- <TaskInput @add-task=\"addNewTask\" @mention-name=\"sayMyName\" /> -->\n  <!-- <Counter @counter-event=\"incrCounter\" /> -->\n  <div id=\"app\">\n    <CurrentTime class=\"col-4\" />\n    <task-input class=\"col-6\" @add-task=\"addNewTask\" />\n    <div class=\"col-12\">\n      <div class=\"cardBox\">\n        <ul class=\"taskList\">\n          <li\n            v-for=\"(taskItem, index) in displayList\"\n            :key=\"`${index}_${Math.random()}`\"\n          >\n            <input\n              type=\"checkbox\"\n              :checked=\"!!taskItem.finishedAt\"\n              @input=\"changeStatus(index)\"\n            />\n            {{ taskItem.task }}\n            <span v-if=\"taskItem.finishedAt\"\n              >Done at: {{ taskItem.finishedAt }}</span\n            >\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TaskInput from \"./components/TaskInput.vue\";\n// import Counter from \"./components/Counter.vue\";\nimport CurrentTime from \"./components/CurrentTime.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    TaskInput,\n    // Counter,\n    CurrentTime,\n  },\n\n  data() {\n    return {\n      counter: 0,\n      taskList: [],\n    };\n  },\n  computed: {\n    displayList() {\n      // return this.taskList.filter((taskItem) => !taskItem.finishedAt);\n      return this.taskList;\n    },\n  },\n  \ncomputed: {\n    getCurrentDate() {\n      const browserLocale =\n        navigator.languages && navigator.languages.length\n          ? navigator.languages[0]\n          : navigator.language;\n      const intlDateTime = new Intl.DateTimeFormat(browserLocale, {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n      });\n      return intlDateTime.format(new Date());\n    },\n  },\n\n  methods: {\n    formatDate(value) {\n      if (!value) return \"\";\n      if (typeof value !== \"number\") return value;\n      const browserLocale =\n        navigator.languages && navigator.languages.length\n          ? navigator.languages[0]\n          : navigator.language;\n      const intlDateTime = new Intl.DateTimeFormat(browserLocale, {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n      });\n      return intlDateTime.format(new Date(value));\n    },\n\n    addNewTask(task) {\n      this.taskList.push({\n        task,\n        createdAt: Date.now(),\n        finishedAt: undefined,\n      });\n    },\n\n    changeStatus(taskIndex) {\n      const task = this.taskList[taskIndex];\n      if (task.finishedAt) {\n        task.finishedAt = undefined;\n      } else {\n        task.finishedAt = Date.now();\n      }\n    },\n\n    sayMyName(name) {\n      alert(`Hello, Welcome ${name}`);\n    },\n\n    incrCounter() {\n      this.counter++;\n      alert(`Counter: ${this.counter}`);\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.taskList li {\n  text-align: left;\n}\n</style>\n"],"mappings":";OACsBA,UAAuB;;gEAA3CC,mBAAA,CAA8C;EAAzCC,GAAG,EAAC,UAAU;EAACC,GAAuB,EAAvBH;;;EAGfI,EAAE,EAAC;AAAK;;EAGNC,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAS;;EACdA,KAAK,EAAC;AAAU;;;;;;;;6DAR1BC,UAA8C,EAC9CC,mBAAA,wEAAuE,EACvEA,mBAAA,gDAAiD,EACjDN,mBAAA,CAuBM,OAvBNO,UAuBM,GAtBJC,YAAA,CAA6BC,sBAAA;IAAhBL,KAAK,EAAC;EAAO,IAC1BI,YAAA,CAAmDE,qBAAA;IAAvCN,KAAK,EAAC,OAAO;IAAEO,SAAQ,EAAEC,QAAA,CAAAC;0CACrCb,mBAAA,CAmBM,OAnBNc,UAmBM,GAlBJd,mBAAA,CAiBM,OAjBNe,UAiBM,GAhBJf,mBAAA,CAeK,MAfLgB,UAeK,I,kBAdHC,mBAAA,CAaKC,SAAA,QAAAC,WAAA,CAZyBP,QAAA,CAAAQ,WAAW,GAA/BC,QAAQ,EAAEC,KAAK;yBADzBL,mBAAA,CAaK;MAXFM,GAAG,KAAKD,KAAK,IAAIE,IAAI,CAACC,MAAM;QAE7BzB,mBAAA,CAIE;MAHA0B,IAAI,EAAC,UAAU;MACdC,OAAO,IAAIN,QAAQ,CAACO,UAAU;MAC9BC,OAAK,EAAAC,MAAA,IAAElB,QAAA,CAAAmB,YAAY,CAACT,KAAK;2EAC1B,GACF,GAAAU,gBAAA,CAAGX,QAAQ,CAACY,IAAI,IAAG,GACnB,iBAAYZ,QAAQ,CAACO,UAAU,I,cAA/BX,mBAAA,CAEC,QAAAiB,UAAA,EADE,WAAS,GAAAF,gBAAA,CAAGX,QAAQ,CAACO,UAAU,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}